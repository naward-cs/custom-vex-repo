{
  "@context": "https://openvex.dev/ns/v0.2.0",
  "@id": "oauth2-proxy--oauth2-proxy-2126abaf22f27bcd5de9c34539508ad9fd877eb68ab87b9c024f199754081289",
  "author": "Nicholas Ward (CACI-Senior Cyber Engineer)",
  "role": "Document Creator",
  "timestamp": "2025-10-21T15:56:03.350134Z",
  "verions": 1,
  "statements": [
    {
      "vulnerability": {
        "name": "CVE-2025-47907",
        "description": "Cancelling a query (e.g. by cancelling the context passed to one of the query methods) during a call to the Scan method of the returned Rows can result in unexpected results if other queries are being made in parallel. This can result in a race condition that may overwrite the expected results with those of another query, causing the call to Scan to return either unexpected results from the other query or an error."
      },
      "products": [
        {
          "@id": "pkg:oci/oauth2-proxy?repository_url=quay.io%2Foauth2-proxy%2Foauth2-proxy",
          "identifiers": {
            "purl": "pkg:golang/github.com/oauth2-proxy/oauth2-proxy/v7@v7.10.0"
          },
          "subcomponents": [
            {
              "@id": "pkg:golang/stdlib@v1.24.5"
            }
          ]
        }
      ],
      "status": "not_affected",
      "justification": "vulnerable_code_not_in_execute_path",
      "impact_statement": "database/sql is within the standard GO library, however, the module is never used within the sourcecode",
      "timestamp": "2025-10-21T15:56:03Z"
    },
    {
      "vulnerability": {
        "name": "CVE-2025-54576",
        "description": "OAuth2-Proxy is an open-source tool that can act as either a standalone reverse proxy or a middleware component integrated into existing reverse proxy or load balancer setups. In versions 7.10.0 and below, oauth2-proxy deployments are vulnerable when using the skip_auth_routes configuration option with regex patterns. Attackers can bypass authentication by crafting URLs with query parameters that satisfy configured regex patterns, allowing unauthorized access to protected resources. The issue stems from skip_auth_routes matching against the full request URI. Deployments using skip_auth_routes with regex patterns containing wildcards or broad matching patterns are most at risk. This issue is fixed in version 7.11.0. Workarounds include: auditing all skip_auth_routes configurations for overly permissive patterns, replacing wildcard patterns with exact path matches where possible, ensuring regex patterns are properly anchored (starting with ^ and ending with $), or implementing custom validation that strips query parameters before regex matching."
      },
      "products": [
        {
          "@id": "pkg:oci/oauth2-proxy?repository_url=quay.io%2Foauth2-proxy%2Foauth2-proxy",
          "identifiers": {
            "purl": "pkg:golang/github.com/oauth2-proxy/oauth2-proxy/v7@v7.10.0"
          },
          "subcomponents": [
            {
              "@id": "pkg:golang/github.com/oauth2-proxy/oauth2-proxy/v7@v7.10.0"
            }
          ]
        }
      ],
      "status": "not_affected",
      "status_notes": "no bypasses are deployed with container",
      "justification": "vulnerable_code_not_in_execute_path",
      "impact_statement": "no bypasses allowed resulting in CVE non applicable",
      "timestamp": "2025-10-21T15:56:03Z"
    }
  ]
}